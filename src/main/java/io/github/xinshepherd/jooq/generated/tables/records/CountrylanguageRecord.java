/*
 * This file is generated by jOOQ.
 */
package io.github.xinshepherd.jooq.generated.tables.records;


import io.github.xinshepherd.jooq.generated.enums.CountrylanguageIsofficial;
import io.github.xinshepherd.jooq.generated.tables.Countrylanguage;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountrylanguageRecord extends UpdatableRecordImpl<CountrylanguageRecord> implements Record4<String, String, CountrylanguageIsofficial, Double> {

    private static final long serialVersionUID = -1286826115;

    /**
     * Setter for <code>world.countrylanguage.CountryCode</code>.
     */
    public void setCountrycode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>world.countrylanguage.CountryCode</code>.
     */
    public String getCountrycode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>world.countrylanguage.Language</code>.
     */
    public void setLanguage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>world.countrylanguage.Language</code>.
     */
    public String getLanguage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>world.countrylanguage.IsOfficial</code>.
     */
    public void setIsofficial(CountrylanguageIsofficial value) {
        set(2, value);
    }

    /**
     * Getter for <code>world.countrylanguage.IsOfficial</code>.
     */
    public CountrylanguageIsofficial getIsofficial() {
        return (CountrylanguageIsofficial) get(2);
    }

    /**
     * Setter for <code>world.countrylanguage.Percentage</code>.
     */
    public void setPercentage(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>world.countrylanguage.Percentage</code>.
     */
    public Double getPercentage() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, CountrylanguageIsofficial, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, CountrylanguageIsofficial, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE;
    }

    @Override
    public Field<String> field2() {
        return Countrylanguage.COUNTRYLANGUAGE.LANGUAGE;
    }

    @Override
    public Field<CountrylanguageIsofficial> field3() {
        return Countrylanguage.COUNTRYLANGUAGE.ISOFFICIAL;
    }

    @Override
    public Field<Double> field4() {
        return Countrylanguage.COUNTRYLANGUAGE.PERCENTAGE;
    }

    @Override
    public String component1() {
        return getCountrycode();
    }

    @Override
    public String component2() {
        return getLanguage();
    }

    @Override
    public CountrylanguageIsofficial component3() {
        return getIsofficial();
    }

    @Override
    public Double component4() {
        return getPercentage();
    }

    @Override
    public String value1() {
        return getCountrycode();
    }

    @Override
    public String value2() {
        return getLanguage();
    }

    @Override
    public CountrylanguageIsofficial value3() {
        return getIsofficial();
    }

    @Override
    public Double value4() {
        return getPercentage();
    }

    @Override
    public CountrylanguageRecord value1(String value) {
        setCountrycode(value);
        return this;
    }

    @Override
    public CountrylanguageRecord value2(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public CountrylanguageRecord value3(CountrylanguageIsofficial value) {
        setIsofficial(value);
        return this;
    }

    @Override
    public CountrylanguageRecord value4(Double value) {
        setPercentage(value);
        return this;
    }

    @Override
    public CountrylanguageRecord values(String value1, String value2, CountrylanguageIsofficial value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountrylanguageRecord
     */
    public CountrylanguageRecord() {
        super(Countrylanguage.COUNTRYLANGUAGE);
    }

    /**
     * Create a detached, initialised CountrylanguageRecord
     */
    public CountrylanguageRecord(String countrycode, String language, CountrylanguageIsofficial isofficial, Double percentage) {
        super(Countrylanguage.COUNTRYLANGUAGE);

        set(0, countrycode);
        set(1, language);
        set(2, isofficial);
        set(3, percentage);
    }
}
